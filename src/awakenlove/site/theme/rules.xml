<?xml version="1.0" encoding="UTF-8"?>
<rules
  xmlns="http://namespaces.plone.org/diazo"
  xmlns:css="http://namespaces.plone.org/diazo/css"
    xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xi="http://www.w3.org/2001/XInclude">

  <!-- Include the backend theme -->
  <xi:include href="++theme++barceloneta/backend.xml" />

  <!-- Only theme front end pages -->
  <rules css:if-content="body.frontend#visual-portal-wrapper">

    <theme href="index.html" />

    <!-- Replace title with Plone's page title  -->
    <replace css:content="html head title" css:theme="html head title" />

    <!-- Copy base tag from Plone -->
    <before css:content="html head base" css:theme-children="html head" />

    <!-- Copy link, style, meta tags from Plone head -->
    <before
      content="/html/head/link | /html/head/style | /html/head/meta"
      css:theme-children="html head"
      />

    <!-- merge classes from Plone body with theme body -->
    <merge attributes="class" css:content="body" css:theme="body" />

    <!-- Copy script tags from Plone head to end of body -->
    <after css:content="html head script" css:theme-children="html body" />

    <!-- USER NAME (FOR LOGGED-IN USERS) -->
    <replace
      if-content="not(//li[@id='anon-personalbar'])"
      content="//a[@id='user-name']/text()"
      css:theme="#user-name"
      />

  	<replace
  	  css:content="h1.documentFirstHeading"
      css:theme=".content__section--inside-title h1" />

		<!-- banner image (TODO: make more sources) -->
		<drop css:theme="section.main__banner" css:if-not-content="#banner_image"/>
		<replace
			css:content="#banner_image"
			css:theme-children=".main__banner--inside picture" />

		<!-- XXX: hack to add a class attribute -->
		<copy attributes="class"
			css:theme=".content" css:content="#content-class-for-diazo-banner" />

		<!-- section menu -->
		<replace css:theme-children=".header__breadcrumb .container">
			<xsl:for-each css:select=".navTreeTopNode a">
				<li class="header__breadcrumb-item category">
					<xsl:copy-of select="current()"/>
				</li>
			</xsl:for-each>
			<xsl:for-each css:select=".navTreeItem:not(.navTreeTopNode) a">
				<li class="header__breadcrumb-item">
					<xsl:copy-of select="current()"/>
				</li>
			</xsl:for-each>
		</replace>

    <!-- CONTENT -->
    <replace
      css:content-children="#parent-fieldname-text"
      css:theme="#content-slot"
      />



  </rules>

</rules>
